apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-backend
  labels:
    app: {{ .Release.Name }}-backend
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-backend
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-backend
    spec:
      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          env:
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: host
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: username
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: password
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: dbname
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-backend-service
  labels:
    app: {{ .Release.Name }}-backend
spec:
  selector:
    app: {{ .Release.Name }}-backend
  ports:
    - protocol: TCP
      port: {{ .Values.backend.service.port }}
      targetPort: 3000
  type: {{ .Values.backend.service.type }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-frontend
  labels:
    app: {{ .Release.Name }}-frontend
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-frontend
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-frontend
    spec:
      containers:
        - name: frontend
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-frontend-service
  labels:
    app: {{ .Release.Name }}-frontend
spec:
  selector:
    app: {{ .Release.Name }}-frontend
  ports:
    - protocol: TCP
      port: {{ .Values.frontend.service.port }}
      targetPort: 80
  type: {{ .Values.frontend.service.type }}

---

apiVersion: networking.k8s.io/v1  
kind: Ingress  
metadata:  
  name: {{ .Release.Name }}-ingress  
  annotations:
{{- range $key, $value := .Values.ingress.annotations }}
    {{ $key }}: "{{ $value }}"
{{- end }}
  labels:
    app: {{ .Release.Name }}-ingress
spec:  
  rules:
{{- range .Values.ingress.rules }}
    - http:  
        paths:  
{{- range $index, $path := .paths }}
          - path: {{ $path.path }}
            pathType: {{ $path.pathType }}
            backend:  
              service:  
                name: {{ $path.backend.serviceName }}
                port:  
                  number: {{ $path.backend.servicePort }}
{{- end }}
{{- end }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secretName }}
type: Opaque
data:
  host: {{ .Values.secret.host }}
  username: {{ .Values.secret.username }}
  password: {{ .Values.secret.password }}
  dbname: {{ .Values.secret.dbname }}
